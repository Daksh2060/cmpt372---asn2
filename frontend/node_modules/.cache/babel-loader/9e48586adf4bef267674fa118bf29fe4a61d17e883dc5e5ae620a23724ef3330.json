{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    fetch(url, {\n      singnal: abortCont.signal\n    }).then(res => {\n      if (!res.ok) {\n        throw Error('Damn it didnt work bro');\n      }\n      return res.json();\n    }).then(data => {\n      setData(data);\n      setIsLoading(false);\n      setError(null);\n    }).catch(err => {\n      if (err.name === 'AbortError') {\n        console.log('fetch aborted');\n      } else {\n        setIsLoading(false);\n        setError(err.message);\n      }\n    });\n    return () => abortCont.abort();\n  }, [url]);\n  return {\n    data,\n    isLoading,\n    error\n  };\n};\n_s(useFetch, \"oHNKtHcXBLfWEYHeRSlN5KEv5w0=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","_s","data","setData","isLoading","setIsLoading","error","setError","abortCont","AbortController","fetch","singnal","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort"],"sources":["C:/Users/Daksh/Desktop/cmpt372---asn2/frontend/src/useFetch.js"],"sourcesContent":["import { useState, useEffect} from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n    \r\n    const [data, setData] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(()=> {\r\n\r\n        const abortCont = new AbortController();\r\n\r\n        fetch(url, {singnal: abortCont.signal})\r\n        .then(res => {\r\n            if(!res.ok){\r\n                throw Error('Damn it didnt work bro')\r\n            }\r\n            return res.json();\r\n        })\r\n        .then((data)=> {\r\n            setData(data);\r\n            setIsLoading(false);\r\n            setError(null);\r\n        })\r\n        .catch((err) => {\r\n            if(err.name === 'AbortError'){\r\n                console.log('fetch aborted')\r\n            }\r\n            else{\r\n                setIsLoading(false);\r\n                setError(err.message);\r\n            }\r\n        })\r\n        return () => abortCont.abort();\r\n\r\n    }, [url]);\r\n\r\n    return { data, isLoading, error }\r\n}\r\n\r\nexport default useFetch;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAE1C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAAC,EAAA;EAEtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAK;IAEX,MAAMU,SAAS,GAAG,IAAIC,eAAe,CAAC,CAAC;IAEvCC,KAAK,CAACV,GAAG,EAAE;MAACW,OAAO,EAAEH,SAAS,CAACI;IAAM,CAAC,CAAC,CACtCC,IAAI,CAACC,GAAG,IAAI;MACT,IAAG,CAACA,GAAG,CAACC,EAAE,EAAC;QACP,MAAMC,KAAK,CAAC,wBAAwB,CAAC;MACzC;MACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACrB,CAAC,CAAC,CACDJ,IAAI,CAAEX,IAAI,IAAI;MACXC,OAAO,CAACD,IAAI,CAAC;MACbG,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,CAAC,CACDW,KAAK,CAAEC,GAAG,IAAK;MACZ,IAAGA,GAAG,CAACC,IAAI,KAAK,YAAY,EAAC;QACzBC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAChC,CAAC,MACG;QACAjB,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAACY,GAAG,CAACI,OAAO,CAAC;MACzB;IACJ,CAAC,CAAC;IACF,OAAO,MAAMf,SAAS,CAACgB,KAAK,CAAC,CAAC;EAElC,CAAC,EAAE,CAACxB,GAAG,CAAC,CAAC;EAET,OAAO;IAAEE,IAAI;IAAEE,SAAS;IAAEE;EAAM,CAAC;AACrC,CAAC;AAAAL,EAAA,CApCKF,QAAQ;AAsCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}